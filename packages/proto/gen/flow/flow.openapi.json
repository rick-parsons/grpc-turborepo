{
  "openapi": "3.1.0",
  "info": {},
  "paths": {
    "/FlowService/GetById": {
      "post": {
        "tags": [
          "FlowService"
        ],
        "description": "get flow by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetByIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByIdResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Status": {
        "type": "string",
        "title": "Status",
        "enum": [
          "INACTIVE",
          "LIVE"
        ]
      },
      "Flow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "id",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "title": "name",
            "additionalProperties": false
          },
          "description": {
            "type": "string",
            "title": "description",
            "additionalProperties": false
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "tags",
              "additionalProperties": false
            }
          }
        },
        "title": "Flow",
        "additionalProperties": false
      },
      "GetByIdRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "id",
            "additionalProperties": false,
            "description": "unique flow identifier"
          }
        },
        "title": "GetByIdRequest",
        "additionalProperties": false
      },
      "GetByIdResponse": {
        "type": "object",
        "properties": {
          "flow": {
            "$ref": "#/components/schemas/Flow"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "title": "GetByIdResponse",
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "id",
            "additionalProperties": false
          },
          "email": {
            "type": "string",
            "title": "email",
            "additionalProperties": false
          },
          "name": {
            "type": "string",
            "title": "name",
            "additionalProperties": false
          }
        },
        "title": "User",
        "additionalProperties": false
      },
      "connect.error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "CodeNotFound"
            ],
            "enum": [
              "CodeCanceled",
              "CodeUnknown",
              "CodeInvalidArgument",
              "CodeDeadlineExceeded",
              "CodeNotFound",
              "CodeAlreadyExists",
              "CodePermissionDenied",
              "CodeResourceExhausted",
              "CodeFailedPrecondition",
              "CodeAborted",
              "CodeOutOfRange",
              "CodeInternal",
              "CodeUnavailable",
              "CodeDataLoss",
              "CodeUnauthenticated"
            ],
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "detail": {
            "$ref": "#/components/schemas/google.protobuf.Any"
          }
        },
        "title": "Connect Error",
        "additionalProperties": true,
        "description": "Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation"
      },
      "google.protobuf.Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "binary"
          },
          "debug": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message."
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "scheme": "basic"
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "FlowService",
      "description": "flow service"
    }
  ],
  "externalDocs": {}
}